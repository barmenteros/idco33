{
  "mql5_prog_000_fc60d222": {
    "text_preview": "2000-2024, MetaQuotes Ltd Contents Contents MQL5 Programming for Traders 13 2Part 2. Programming fun...",
    "vector_index": 0,
    "section_hint": "general"
  },
  "mql5_prog_001_59bc27ef": {
    "text_preview": ".............. 61 .....................................................................................",
    "vector_index": 1,
    "section_hint": "general"
  },
  "mql5_prog_002_fba0c34e": {
    "text_preview": "6 Type conversion 2.5.12 Grouping with parentheses 2.5.13 Priorities of operations 2.6.1. Implicit t...",
    "vector_index": 2,
    "section_hint": "general"
  },
  "mql5_prog_003_1c24f717": {
    "text_preview": "...... 141 ............................................................................................",
    "vector_index": 3,
    "section_hint": "general"
  },
  "mql5_prog_004_1fc8b098": {
    "text_preview": "OOP fundamentals: Abstraction 3.2.2 OOP fundamentals: Encapsulation 3.2.3 OOP fundamentals: Inherita...",
    "vector_index": 4,
    "section_hint": "general"
  },
  "mql5_prog_005_2b70f9de": {
    "text_preview": "...... 219 ............................................................................................",
    "vector_index": 5,
    "section_hint": "general"
  },
  "mql5_prog_006_991b07db": {
    "text_preview": "...... 338 ............................................................................................",
    "vector_index": 6,
    "section_hint": "general"
  },
  "mql5_prog_007_6d0095f3": {
    "text_preview": ".4 Color 4.1.5 Structures 4.1.6 Enumerations 4.1.7 Type complex 4.2 Working with strings and symbols...",
    "vector_index": 7,
    "section_hint": "general"
  },
  "mql5_prog_008_bed79046": {
    "text_preview": ".............. 396 ....................................................................................",
    "vector_index": 8,
    "section_hint": "general"
  },
  "mql5_prog_009_cca6e372": {
    "text_preview": ".............. 522 ....................................................................................",
    "vector_index": 9,
    "section_hint": "general"
  },
  "mql5_prog_010_43785d40": {
    "text_preview": "15 Handling runtime errors 4.9.16 User-defined errors 4.9.17 Debug management 4.9.18 Predefined vari...",
    "vector_index": 10,
    "section_hint": "general"
  },
  "mql5_prog_011_0e3b5027": {
    "text_preview": ".............. 651 ....................................................................................",
    "vector_index": 11,
    "section_hint": "general"
  },
  "mql5_prog_012_39019c12": {
    "text_preview": "and services 5.4.1 Main characteristics of indicators 5.4.2 Main indicator event: OnCalculate 5.4 Cr...",
    "vector_index": 12,
    "section_hint": "general"
  },
  "mql5_prog_013_864abb45": {
    "text_preview": "indicators 5.4.17 Tracking bar formation 5.4.18 Testing indicators 5.4.19 Limitations and advantages...",
    "vector_index": 13,
    "section_hint": "general"
  },
  "mql5_prog_014_9ac23fbe": {
    "text_preview": "...... 867 ............................................................................................",
    "vector_index": 14,
    "section_hint": "general"
  },
  "mql5_prog_015_e83ad438": {
    "text_preview": "8.27 Additional properties of Gann, Fibonacci, and Elliot objects 5.8.28 Chart object 5.8.29 Moving ...",
    "vector_index": 15,
    "section_hint": "general"
  },
  "mql5_prog_016_d1af117b": {
    "text_preview": ".............. 1049 ...................................................................................",
    "vector_index": 16,
    "section_hint": "general"
  },
  "mql5_prog_017_8c1073e7": {
    "text_preview": "5.9.4 Keyboard events 5.9.5 Mouse events 5.9.6 Graphical object events 5.9.7 Generation of custom ev...",
    "vector_index": 17,
    "section_hint": "general"
  },
  "mql5_prog_018_922f0087": {
    "text_preview": ".............. 1082 ...................................................................................",
    "vector_index": 18,
    "section_hint": "general"
  },
  "mql5_prog_019_b0de0a27": {
    "text_preview": ".............. 1255 ...................................................................................",
    "vector_index": 19,
    "section_hint": "general"
  },
  "mql5_prog_020_306582f1": {
    "text_preview": "stop: TesterStop 6.5.16 Big Expert Advisor example 6.5.17 Mathematical calculations 6.5.18 Debugging...",
    "vector_index": 20,
    "section_hint": "general"
  },
  "mql5_prog_021_69f6ad82": {
    "text_preview": ".............. 1624 ...................................................................................",
    "vector_index": 21,
    "section_hint": "general"
  },
  "mql5_prog_022_fc503dbf": {
    "text_preview": "sessions 7.2.5 Adding, replacing, and deleting quotes 7.2.6 Adding, replacing, and removing ticks 7....",
    "vector_index": 22,
    "section_hint": "general"
  },
  "mql5_prog_023_fc13eab1": {
    "text_preview": ".............. 1701 ...................................................................................",
    "vector_index": 23,
    "section_hint": "general"
  },
  "mql5_prog_024_58f811b3": {
    "text_preview": ".............................................. 1914 ...................................................",
    "vector_index": 24,
    "section_hint": "general"
  },
  "mql5_prog_025_f44c1253": {
    "text_preview": "5 7.8.7 Client programs for echo and chat services in MQL5 7.8.8 Trading signal service and test web...",
    "vector_index": 25,
    "section_hint": "general"
  },
  "mql5_prog_026_c9af3e85": {
    "text_preview": "7 .....................................................................................................",
    "vector_index": 26,
    "section_hint": "general"
  },
  "mql5_prog_027_2c4609c8": {
    "text_preview": "languages should note the features of the framework. Part 2 explains the basic terms, such as types,...",
    "vector_index": 27,
    "section_hint": "general"
  },
  "mql5_prog_028_2776fc0b": {
    "text_preview": "to C++. In all fairness, it should be noted that today all OOP tools that initially had only been av...",
    "vector_index": 28,
    "section_hint": "general"
  },
  "mql5_prog_029_95c9baf2": {
    "text_preview": "terminal users both from the user interface and via software tools embedded in MQL5. Since MQL5 prog...",
    "vector_index": 29,
    "section_hint": "general"
  },
  "mql5_prog_030_4a4f114f": {
    "text_preview": "where <type> is, respectively: Indicators Experts Scripts Services Based on the MetaTrader 5 install...",
    "vector_index": 30,
    "section_hint": "general"
  },
  "mql5_prog_031_74811b99": {
    "text_preview": "files: The main one and some supporting ones that are enabled from the main file in a special manner...",
    "vector_index": 31,
    "section_hint": "general"
  },
  "mql5_prog_032_70afe9c9": {
    "text_preview": "MetaTrader 5 Navigator with a compiled MQL5 program Ready programs are launched in the terminal usin...",
    "vector_index": 32,
    "section_hint": "general"
  },
  "mql5_prog_033_b0745862": {
    "text_preview": "5 and open it for editing. The file is located in folder MQL5/Scripts (standard location for scripts...",
    "vector_index": 33,
    "section_hint": "general"
  },
  "mql5_prog_034_b59c150e": {
    "text_preview": "string visually emphasizes the file end. Three strings starting with a special directive, #property,...",
    "vector_index": 34,
    "section_hint": "general"
  },
  "mql5_prog_035_e8d7ff0d": {
    "text_preview": "? In his day, Niklaus Wirth, one of the big names in programming, gave a simple generalized definiti...",
    "vector_index": 35,
    "section_hint": "general"
  },
  "mql5_prog_036_8797290a": {
    "text_preview": "OnStart function. Name OnStart is reserved in scripts to denote the ultimate function that is called...",
    "vector_index": 36,
    "section_hint": "general"
  },
  "mql5_prog_037_aaa71474": {
    "text_preview": "off). That is exactly why, before the OnStart function name, there is the word void that informs the...",
    "vector_index": 37,
    "section_hint": "general"
  },
  "mql5_prog_038_c7ae0bcb": {
    "text_preview": "and that the ready program appears folder Scripts/MQL5Book/p1. This results from the fact that, on t...",
    "vector_index": 38,
    "section_hint": "general"
  },
  "mql5_prog_039_72460782": {
    "text_preview": "call for another embedded function, Symbol, that returns the name of the active instrument on the cu...",
    "vector_index": 39,
    "section_hint": "general"
  },
  "mql5_prog_040_76843d79": {
    "text_preview": "q5 16 19 The compiler 'complains' of the lack of something before mentioning Symbol. This will break...",
    "vector_index": 40,
    "section_hint": "general"
  },
  "mql5_prog_041_0dd48e6a": {
    "text_preview": "logical to suggest that the definition structure of the new function must be similar to that of the ...",
    "vector_index": 41,
    "section_hint": "general"
  },
  "mql5_prog_042_8dbcc249": {
    "text_preview": "function execution and sends out what is to the right of it, as a result. \"Out\" hides the source cod...",
    "vector_index": 42,
    "section_hint": "general"
  },
  "mql5_prog_043_238a7786": {
    "text_preview": "underscores; and it may not start with a number. This is why the word 'Greeting' chosen for the func...",
    "vector_index": 43,
    "section_hint": "general"
  },
  "mql5_prog_044_819c545b": {
    "text_preview": "need 3 variables to describe these strings. However, it is much more convenient to use an array in s...",
    "vector_index": 44,
    "section_hint": "general"
  },
  "mql5_prog_045_40c751b5": {
    "text_preview": "in school-time arithmetic and algebra. For example, operations of addition ('+'), subtraction ('-'),...",
    "vector_index": 45,
    "section_hint": "general"
  },
  "mql5_prog_046_20578fd1": {
    "text_preview": "\"Hello, \"; } In the statement added, not only the messages array with 3 elements is defined, but als...",
    "vector_index": 46,
    "section_hint": "general"
  },
  "mql5_prog_047_422d0c27": {
    "text_preview": ", is defined and initialized by the value of the above expression. However, we can omit saving the i...",
    "vector_index": 47,
    "section_hint": "general"
  },
  "mql5_prog_048_0759c951": {
    "text_preview": "input The basic way of data transfer into an MQL program is to use input parameters. They are simila...",
    "vector_index": 48,
    "section_hint": "general"
  },
  "mql5_prog_049_e5f31115": {
    "text_preview": "matter is that different types of MQL5 programs have different life cycles after being launched on c...",
    "vector_index": 49,
    "section_hint": "general"
  },
  "mql5_prog_050_db2edac8": {
    "text_preview": "phenomenon, i.e., runtime error. In this case, the terminal notifies that in position 18 of string 1...",
    "vector_index": 50,
    "section_hint": "general"
  },
  "mql5_prog_051_7a7e14ae": {
    "text_preview": "work smoothly, but the result provided is not correct; it is easy to detect if 2*2 is not 4, while i...",
    "vector_index": 51,
    "section_hint": "general"
  },
  "mql5_prog_052_d73b4e17": {
    "text_preview": "situation. The script will start executing, and the terminal will practically immediately display an...",
    "vector_index": 52,
    "section_hint": "general"
  },
  "mql5_prog_053_e37c8cac": {
    "text_preview": "display a tip or fix it automatically in case of violation of the conditions. Within this introducto...",
    "vector_index": 53,
    "section_hint": "general"
  },
  "mql5_prog_054_aa931ac6": {
    "text_preview": "error). To fix this problem, we will replace the type of parameter GreetingHour with the unsigned in...",
    "vector_index": 54,
    "section_hint": "general"
  },
  "mql5_prog_055_02fc41ea": {
    "text_preview": "the script, the previous GreetingHour will appear in the dialog to enter the parameters as follows: ...",
    "vector_index": 55,
    "section_hint": "general"
  },
  "mql5_prog_056_eeca1125": {
    "text_preview": "function Greeting: void OnStart() { Comment(Greeting(GreetingHour), \", \", Symbol()); } Having launch...",
    "vector_index": 56,
    "section_hint": "general"
  },
  "mql5_prog_057_c4cab60c": {
    "text_preview": "some elements of the statement, such as a comma ',' between function parameters, then there is no ne...",
    "vector_index": 57,
    "section_hint": "general"
  },
  "mql5_prog_058_e795754f": {
    "text_preview": "numbers. Otherwise, the compiler won't be able to recognize them. For example, if we insert just one...",
    "vector_index": 58,
    "section_hint": "general"
  },
  "mql5_prog_059_e4b1f0bb": {
    "text_preview": "case above, supposing that you have received this broken code from another programmer and the array ...",
    "vector_index": 59,
    "section_hint": "general"
  },
  "mql5_prog_060_bc8fdeb2": {
    "text_preview": "types: MQL5 includes a variety of built-in data types, each designed to store and process specific t...",
    "vector_index": 60,
    "section_hint": "general"
  },
  "mql5_prog_061_0e6b5310": {
    "text_preview": "63 characters. The identifier may not coincide with any service words of MQL5, such as type names. Y...",
    "vector_index": 61,
    "section_hint": "general"
  },
  "mql5_prog_062_b3172c1d": {
    "text_preview": "everyday life without even thinking of its existence. It is implied based on the meaning of the info...",
    "vector_index": 62,
    "section_hint": "general"
  },
  "mql5_prog_063_394d06c3": {
    "text_preview": "values with a decimal point. At the same time, the number of orders in history or, again, the accoun...",
    "vector_index": 63,
    "section_hint": "general"
  },
  "mql5_prog_064_39b232ca": {
    "text_preview": "numeric and character-coded data (marked in the relevant columns), as well as other, specialized typ...",
    "vector_index": 64,
    "section_hint": "general"
  },
  "mql5_prog_065_1cf5cd23": {
    "text_preview": ". Please note that numeric and character-coded types are partly crossed. This happens because a char...",
    "vector_index": 65,
    "section_hint": "general"
  },
  "mql5_prog_066_03c2ddaf": {
    "text_preview": "named constants: CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHORT_MIN, SHORT_MAX,USHORT_MAX, INT_MAX, UINT_MAX, ...",
    "vector_index": 66,
    "section_hint": "general"
  },
  "mql5_prog_067_27d945d0": {
    "text_preview": "to be irrational is called \"additional.\" It allows you to unify computations of signed and unsigned ...",
    "vector_index": 67,
    "section_hint": "general"
  },
  "mql5_prog_068_61b8382e": {
    "text_preview": "may be necessary for storing potentially very large quantities, for which no negative values may app...",
    "vector_index": 68,
    "section_hint": "general"
  },
  "mql5_prog_069_5ec96eeb": {
    "text_preview": "11, C 12, etc., up through F equal to 15. A distinctive feature of a hexadecimal constant is the fac...",
    "vector_index": 69,
    "section_hint": "general"
  },
  "mql5_prog_070_86af135b": {
    "text_preview": "normal type (int) and, therefore, calls for the compiler warning. Since the constant exceeds the max...",
    "vector_index": 70,
    "section_hint": "general"
  },
  "mql5_prog_071_f182ee8f": {
    "text_preview": "is mandatory. For instance, .123 means 0.123, while 123. means 123.0. Simply 123 will create a const...",
    "vector_index": 71,
    "section_hint": "general"
  },
  "mql5_prog_072_222d9c69": {
    "text_preview": "7295, i.e., about 4 million, or 4.29*109, then the 4- byte real one (float) has 3.4 * 1038, which is...",
    "vector_index": 72,
    "section_hint": "general"
  },
  "mql5_prog_073_91ef89db": {
    "text_preview": "values. At the same time, with the increase in the exponent, the \"specific weight\" of the low-order ...",
    "vector_index": 73,
    "section_hint": "general"
  },
  "mql5_prog_074_81dc37ae": {
    "text_preview": "already. Then where is the signed bit? The matter is that IT professionals arranged to store mantiss...",
    "vector_index": 74,
    "section_hint": "general"
  },
  "mql5_prog_075_e34d441b": {
    "text_preview": "used, we choose double as a more accurate one. Type float is only used to save memory, such as when ...",
    "vector_index": 75,
    "section_hint": "general"
  },
  "mql5_prog_076_030f4ba8": {
    "text_preview": "9223372036854775807, there will be 9223372036854776000. It obviously demonstrates that, even though ...",
    "vector_index": 76,
    "section_hint": "general"
  },
  "mql5_prog_077_09bec8c9": {
    "text_preview": "is the table of ASCII characters (codes 0-127); for uchar, it is extended ASCII (codes 0-255); and f...",
    "vector_index": 77,
    "section_hint": "general"
  },
  "mql5_prog_078_ea88e732": {
    "text_preview": "code in octal format Basic methods of using MQL5/Scripts/MQL5Book/p2/TypeChar.mq5. the constants of ...",
    "vector_index": 78,
    "section_hint": "general"
  },
  "mql5_prog_079_26f9706a": {
    "text_preview": "the 'terminating zero' (a char coded as 0) that denotes the end of the line. Moreover, MQL5 uses som...",
    "vector_index": 79,
    "section_hint": "general"
  },
  "mql5_prog_080_b1c1ab7c": {
    "text_preview": "comparison operators and some others. As the story unfolds, we will touch upon all such aspects. Var...",
    "vector_index": 80,
    "section_hint": "general"
  },
  "mql5_prog_081_8ebba5eb": {
    "text_preview": "type value as a number is supported, as well: true is considered as 1 and false as 0. Examples of lo...",
    "vector_index": 81,
    "section_hint": "general"
  },
  "mql5_prog_082_c4b9f527": {
    "text_preview": ":59:59\". Examples of MQL5/Scripts/MQL5Book/p2/TypeDateTime.mq5. recording values the of the datetime...",
    "vector_index": 82,
    "section_hint": "general"
  },
  "mql5_prog_083_32116341": {
    "text_preview": ".2.7 Color MQL5 has a special type for working with color. This allows the coloring of graphical obj...",
    "vector_index": 83,
    "section_hint": "general"
  },
  "mql5_prog_084_815d1bbf": {
    "text_preview": ", and clrYellow. They also include the primaries, of course: clrRed, clrGreen, and clrBlue. The full...",
    "vector_index": 84,
    "section_hint": "general"
  },
  "mql5_prog_085_7e1ca037": {
    "text_preview": ". Their names are prefixed with \"ENUM_\". We are going to learn them as we move through the relevant ...",
    "vector_index": 85,
    "section_hint": "general"
  },
  "mql5_prog_086_fff67829": {
    "text_preview": "; // '10' - cannot convert enum } All constants of the days of the week are coded with numbers from ...",
    "vector_index": 86,
    "section_hint": "general"
  },
  "mql5_prog_087_20ba796d": {
    "text_preview": "a random value in the enumeration type variable, they can use explicit typecasting. Explicit and imp...",
    "vector_index": 87,
    "section_hint": "general"
  },
  "mql5_prog_088_abb8e8ee": {
    "text_preview": "example below). 2.2 Built-in data types 61 Part 2. Programming fundamentals If the values are not de...",
    "vector_index": 88,
    "section_hint": "general"
  },
  "mql5_prog_089_9a32e94a": {
    "text_preview": "are available in initialization expressions. Enumeration with MILLION has no name, such enumerations...",
    "vector_index": 89,
    "section_hint": "general"
  },
  "mql5_prog_090_87f3822a": {
    "text_preview": "provide a mechanism for storing data of various types, playing an important role in organizing progr...",
    "vector_index": 90,
    "section_hint": "general"
  },
  "mql5_prog_091_b69cf7aa": {
    "text_preview": "necessary for being used in the program. Definition, however, contains the specific implementation o...",
    "vector_index": 91,
    "section_hint": "general"
  },
  "mql5_prog_092_8b0ca76c": {
    "text_preview": "only encountered examples where braces define the body of functions. However, they can also be used ...",
    "vector_index": 92,
    "section_hint": "general"
  },
  "mql5_prog_093_0be3f540": {
    "text_preview": "3 Variables 66 Part 2. Programming fundamentals Part 1 and called it from the OnStart function. This...",
    "vector_index": 93,
    "section_hint": "general"
  },
  "mql5_prog_094_a8c99820": {
    "text_preview": "1 int p; // ... use p for task 1 } { // LOCAL SUBSCOPE 2 // y = p; // error: 'p' - undeclared identi...",
    "vector_index": 94,
    "section_hint": "general"
  },
  "mql5_prog_095_dedd0337": {
    "text_preview": "to set the initial value; it is specified following the variable name and symbol '=' and must corres...",
    "vector_index": 95,
    "section_hint": "general"
  },
  "mql5_prog_096_da8991a2": {
    "text_preview": "to be used in different programs after they have become unnecessary for those executed earlier). It ...",
    "vector_index": 96,
    "section_hint": "general"
  },
  "mql5_prog_097_7d126191": {
    "text_preview": ". They will be considered in the next section. Let's create a new script, VariableScopes.mq5, with e...",
    "vector_index": 97,
    "section_hint": "general"
  },
  "mql5_prog_098_74793685": {
    "text_preview": "a blue sign in the left field, which signals that the program execution will stop here if it starts ...",
    "vector_index": 98,
    "section_hint": "general"
  },
  "mql5_prog_099_f8486e35": {
    "text_preview": "takes value 1. Another step will continue initialization for variable n, and it will also become 1. ...",
    "vector_index": 99,
    "section_hint": "general"
  }
}